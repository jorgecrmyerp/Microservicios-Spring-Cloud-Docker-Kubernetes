spring.application.name=servicio-validacion

##puerto automatico aleatorio
server.port=${PORT:0}
##instancia en eureka aleatoria
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
#la ruta de acceso puede mostrar la direccion ip
eureka.instance.prefer-ip-address=true 
##CONEXION CON EUREKA SIN DOCKER
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
##CONEXION CON EUREKA con DOCKER
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka

##ACTUATOR
management.endpoints.web.exposure.include=*
management.endpoint.auditevents.enabled=true
management.endpoint.health.show-details=ALWAYS
management.endpoint.info.enabled=true
management.endpoint.health.group.custom.include=diskSpace,ping
management.endpoint.health.group.custom.show-components=always
management.endpoint.health.group.custom.show-details=always

logging.level.org.hibernate.SQL=debug
spring.jackson.time-zone=Europe/Madrid
spring.jackson.locale=es_ES

#h2 CON ESTOS PARAMETRTOS SOLO PUEDO TENER UNA INSTANCIA DEL MICROSERVICIO ACTIVA
spring.datasource.url=jdbc:h2:mem:usuarios
spring.h2.console.path=/h2-console
spring.sql.init.username=sa
spring.sql.init.password=
spring.jpa.hibernate.ddl-auto=create-drop
spring.h2.console.enabled=true
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

##para Sleuth/Zipkin saque todas las trazas, por defecto es un 10%,el endpoint esta en el configserver
spring.sleuth.sampler.probability=1.0
##para rabbitmq,guarda datos en bbdd
spring.zipkin.base-url=http://localhost:9411/
spring.zipkin.sender.type=rabbit
##cuando creo docker le paso la direccion de la instancia/contenedor donde va a estar,
#lo pongo en el application-properties que tengo en git
spring.rabbitmq.host=servicios-rabbitmq311