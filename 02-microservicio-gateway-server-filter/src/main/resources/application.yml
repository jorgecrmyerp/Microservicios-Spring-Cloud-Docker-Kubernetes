eureka:
  client:
    service-url:
      ##defaultZone: http://localhost:8761/eureka CONEXION SIN DOCKER
      defaultZone: http://eureka-server:8761/eureka
server:
  port: 8090
##ESTE TIENE PRIORIDAD SOBRE EL APPCONFIG
resilience4j:
  circuitbreaker:
    configs:
      nombreconfiguracion:    ##nombre que le doy a esta configuracion
        sliding-window-size: 6  ##tamaño de ventana
        failure-rate-threshold: 50 ##porcentaje de error
        wait-duration-in-open-state: 20s ##tiempo que queda abierto el circuito
        permitted-number-of-calls-in-half-open-state: 4 ##llamadas en estado semiabierto
        slow-call-rate-threshold: 50 ##porcentaje de llamadas lentas
        slow-call-duration-threshold: 5s ##tiempo limite
    instances:
      productos: ##lo vamos a usar en el microservicio productos
        base-config: nombreconfiguracion   
  timelimiter: ##para los limites de tiempo
    configs:
      nombreconfiguracion:
        timeout-duration: 5s
    instances:
      productos:   ##lo vamos a usar en el microservicio productos
        base-config: nombreconfiguracion  
spring:
  application:
    name: gateway-server
    ##para Sleuth/Zipkin saque todas las trazas, por defecto es un 10%,el endpoint lo configuro en el configserver
  sleuth:
    sampler:
      probability: 1.0  
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
##  config:
##    import: 'optional:configserver:'
##    import: configserver:http://localhost:8888
##      import: 'optional:configserver:http://localhost:8888'
  profiles:
    active:
    - dev               
  cloud:
    gateway:
      routes:
      - id: servicio-alumnos
        uri: lb://servicio-alumnos
        predicates:
          - Path=/api/alumnos/**
        filters:
        ##añadimos este circuitbreaker, en caso de error 500 le manda a otra uri
            - name: CircuitBreaker
              args:
                name: productos
                statusCodes: 500 ,503
                fallbackUri: forward:/api/cursos/por-nombre/                   
            - StripPrefix=2           
            - Ejemplo=Hola mensaje desde application.yml,usuario,Yomismo            
      - id: servicio-item
        uri: lb://servicio-cursos
        predicates:
          - Path=/api/cursos/**
        filters:
            - StripPrefix=2
            - AddRequestHeader=token-request, abcdefg
            - AddResponseHeader=token-response, 789abc
            - AddRequestParameter=nombre, elMio
#           - SetResponseHeader=Content-Type, text/plain  devuelve los datos como como texto plano        
      - id: servicio-validacion
        uri: lb://servicio-validacion
        predicates:
          - Path=/api/validacion/**
        filters:
            - StripPrefix=2 ##lo he definido en iusuariodao con el path usuarios
      - id: servicio-autenticacion
        uri: lb://servicio-autenticacion
        predicates:
          - Path=/api/autenticacion/**
        filters:
            - StripPrefix=2
            #Remove All the sensitive request headers (Cookie, Set-Cookie & Authorization)
            #while passing request to downstream services
            #https://stackoverflow.com/questions/65684193/spring-cloud-gateway-remove-request-headers-from-all-the-routes-but-one
            ##- RemoveRequestHeader=Cookie
            ##- RemoveRequestHeader=Set-Cookie
            ##- RemoveRequestHeader=Authorization